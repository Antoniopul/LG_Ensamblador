TITLE Plantilla de programa(plantilla.asm)
;DESCRIPCION DEL PROGRAMA:
;AUTOR:
;FECHA DE CREACION:
;REVISIONES:
;FECHA DE ÚLTIMA MODIFICACIÓN:

INCLUDE Irvine32.inc
; (AQUI SE INSERTAN LAS DEFINICIONES DE SÍMBOLOS)
.DATA
; (AQUÍ SE INSERTAN LAS VARIABLES)
;***************************************************************************************

TAM           DW ?
MATRIZ_A      DB  16    DUP(? )		; MATRIZ A
MATRIZ_B      DB  16    DUP(? )		; MATRIZ B
MAT_RESULT    DB  16    DUP(? )		; MATRIZ R RESULTANTE
MAT_INTMEDIA  DB  16    DUP(? )		; MATRIZ PARA ALMACENAR LOSMPRODUCTOS
IndB          DW ?					; INDICE DE LA MATRIZ B
IndR          DW  0					; INDICE DE LA MATRIZ RESULTANTE C
IND_FILA     DW ?
TAM_MATRIZ_A DB  2     DUP(? )
TAM_MATRIZ_B DB  2     DUP(? )
CONTA    DB ?

TEMP DW 0
IND_MAT_INT DW 0
TEMP_INDICE DW 0

OTR_VAR DW 0
y3 db 0

;//////////////DIBUJO
EJEY DB 1
ESPA DB 3
YC DB 8
JAZ DB 0

LK DW 0

MATRIZ_AJ   DB  1, 22, 3, 42, 5, 62		; MATRIZ A; PARA - PARAMETRO QUE INDICA QUE EL CODIGO INICIA EN LOS
MATRIZ_BJ    DB  6, 5, 4, 3, 2, 1		; MATRIZ B; LIMITES DE UN PARRAFO(DIRECCION DIVISIBLE POR 16 BITS)
MATRIZ_RJ   DB  22, 3, 42, 5			; MATRIZ R

; Variables Nuevas; PUBLIC - INDICA QUE TODOS LOS SEGMENTOS CON EL MISMO ATRIBUTO
X DB 3
Y DB 1
TempPrint1 DB 0
TempPrint2 DB 0

; INDICE PARA CUBRIR LOS 3 ELEMENTOS DE CADA FILA


;***************************************************************************************
.CODE
main PROC
;(AQUÍ SE INSERTAN LAS INSTRUCCIONES EJECUTABLES)
;***************************************************************************************
REINTENTAR:
CALL Clrscr
; RESTAURAR VARIABLES
MOV TAM, 0
MOV IndB, 0
MOV IndR, 0
MOV IND_FILA, 0
MOV TAM_MATRIZ_A, 2
MOV TAM_MATRIZ_B, 2
MOV CONTA, 0
MOV TEMP, 0
MOV IND_MAT_INT, 0
MOV TEMP_INDICE, 0
MOV OTR_VAR, 0
MOV EJEY, 1
MOV ESPA, 6
MOV YC, 8
MOV JAZ, 0
MOV X, 3
MOV Y, 1
MOV TempPrint1, 0
MOV TempPrint2, 0
MOV LK, 0

MOV EAX, 0
MOV EBX, 0
MOV ECX, 0
MOV EDX, 0
MOV ESI, 0
MOV EDI, 0

MOV DL, 1
MOV DH, 1
CALL GOTOXY
CALL WriteInt
DB 'Tamano Columna de la matriz A :', 0
CALL ReadInt            ; CALL SCAN_NUM
MOV TAM_MATRIZ_A[0], EAX
MOV DL, 1
MOV DH, 2
CALL GOTOXY
CALL WriteInt
DB 'Tamano Fila de la matriz A:', 0
CALL ReadInt
MOV TAM_MATRIZ_A[1], EAX


MOV AL, TAM_MATRIZ_A[0]
MOV BL, CL
MUL EBX

MOV TAM, EAX
mov ECX, OFFSET EAX     ; LEA ECX, EAX
mov CONTA, 0
MOV ESI, 0
DATOS_A:

MOV AL, CONTA
ADD AL, 1
MOV CONTA, AL

MOV TAM, ECX

MOV DL, 1
MOV DH, 6
CALL GOTOXY
CALL WriteInt
DB 'Ingresa los datos:', 0
MOV DL, CONTA
MOV DH, 7
CALL GOTOXY
CALL ReadInt
MOV MATRIZ_A[ESI], EAX
INC ESI
MOV ECX, TAM

LOOP DATOS_A

CALL Clrscr


MOV EAX, 0
MOV CL, TAM_MATRIZ_A[0]
MOV TAM_MATRIZ_B[1], CL
MOV DL, 1
MOV DH, 1
CALL GOTOXY
CALL PTHIS
DB 'Tamano Columna de la matriz B:', 0
CALL SCAN_NUM
MOV  TAM_MATRIZ_B[0], CL

MOV AL, TAM_MATRIZ_B[1]
MOV BL, CL
MUL EBX

MOV TAM, EAX
MOV ECX, OFFSET EAX     ; LEA ECX, EAX
mov CONTA, 0
MOV ESI, 0
DATOS_B:

MOV AL, CONTA
ADD AL, 1
MOV CONTA, AL


mov TAM, ECX


MOV DL,1
MOV DH,6
CALL GOTOXY
CALL PTHIS
DB 'Ingresa los datos:', 0
MOV DL,CONTA
MOV DH,7
CALL GOTOXY
CALL SCAN_NUM
MOV MATRIZ_B[ESI], CL
INC ESI
MOV ECX, TAM


LOOP DATOS_B


; MOV AL, TAM_MATA[0]
; MOV BL, TAM_MATA[1]
; CMP AL, BL
; JA SALIR :




;////////////////////////////////////



MOV CL, TAM_MATRIZ_A[0]
MOV TEMP, CL
DEC TEMP

; MOV ESI, 0; CARGAMOS 0 EN EL INDICE SI
; mov OtraVariable, 0
MOV ESI, 0
MOV OTR_VAR, 0

MOV AL, TAM_MATRIZ_A[1]
MOV JAZ, AL
; ADD BL, TAM_MATRIZ_A[1]
; CMP AL, TAM_MATRIZ_A[1]
; JA MAYOR
; JB MENOR

; MAYOR:
; MOV EAX, 0
; MOV AL, TAM_MATRIZ_A[1]; 2   3
; MOV BL, TAM_MATRIZ_B[1]; 1   2
; MUL BL
; MOV SUMATEMP, AL
; MOV EAX, 0
; CMP EAX, 0
; JE MUL_MATRIZ1



; MENOR:
; MOV EAX, 0
; MOV AL, TAM_MATRIZ_A[1]
; MOV BL, TAM_MATRIZ_B[0]
; MUL BL
; MOV SUMATEMP, AL
; MOV EAX, 0
;
; MUL_MATRIZ1:
;


;////////////////////////////////// 






WHILE:

CMP JAZ, 0
JE SALIR

MOV EAX, 0

MOV IND_MAT_INT, 0
MOV EDI, 0; CARGAMOS 0 EN EL INDICE EDI


MOV  AL, TAM_MATRIZ_B[0]


MOV IND_FILA, EAX; CARGAMOS EL LIMITE DE OPERECIONES
; MOV IndR, 0; CARGAMOS UN 0 EN IndR

MULTI1 :
MOV IndB, EDI; SE ALMACENO EDI EN IndB


MULTI2:
MOV   AL, MATRIZ_A[ESI]; CARGAMOS EL PRIMER ELEMENTO DE A Y LO GUARDAMOS EN AL
MOV   BL, MATRIZ_B[EDI]; CARGAMOS  EL PRIMER ELEMENTO DE B
MUL   BL; HACEMOS LA MULTIPLICACION

MOV TEMP_INDICE, ESI
MOV ESI, IND_MAT_INT

MOV   MAT_INTMEDIA[ESI], AL; [ESI] ; GUARDAMOS EL RFESULTADO EN LA MATRIZ INTERMEDIA

MOV ESI, TEMP_INDICE

MOV EAX, 0
MOV   AL, TAM_MATRIZ_B[0]

ADD   EDI, EAX; SUMADOS UN 3 A EDI

INC   IND_MAT_INT
INC   ESI; INCREMENTAMOS ESI
CMP   ESI, TEMP; COMPARAMOS EL VALOR DE ESI CON EL 2
JBE   MULTI2; SI EL RESULTADO ES 2 VUELVE A HACER LA OPERACION


MOV   AL, MAT_INTMEDIA[0]; CARGAMOS EL PRIMER VALOR DE LA MATRIZ INTERMEDIA EN AL
ADD   AL, MAT_INTMEDIA[1]; SUMAMOS EL SEGUNDO VALOR DE LA MATRIZ INTERMEDIA
ADD   AL, MAT_INTMEDIA[2]; SUMAMOS EL TERCER VALOR DE LA MATRIZ INTERMEDIA
ADD   AL, MAT_INTMEDIA[3]

MOV   ESI, IndR; CARGAMOS EN ESI EL INDICE DE LA MATERIA RESULTANTE
MOV   MAT_RESULT[ESI], AL; CARGAMOS EL AL EN LA POCISION ESI DE LA MATRIZ MATR
INC   IndR; INCREMENTAMOS IndR

MOV   IND_MAT_INT, 0
MOV   ESI, OTR_VAR; CARGAMOS EN EL INDICE ESI EL 0
MOV   EDI, IndB; CARGAMOS IndB EN EDI
INC   EDI; INCREMENTAMOS EDI
DEC   IND_FILA; DECREMENTAMOS Indfila
CMP   IND_FILA, 0; COMPARAMOS SI Indfils ES IGUAL A 0
JA    MULTI1
; Incrementarlo


INC TEMP
MOV DL, TEMP
MOV SI, TEMP; SI 1, 2, 4
MOV OTR_VAR, DL;   2 3 4
ADD DL, TAM_MATRIZ_A[0]
MOV TEMP, DL

DEC TEMP
DEC JAZ

CMP   IND_FILA, 0
JZ WHILE :


;//////////////////MATRIZES_DIBUJO////////////////////// 
SALIR:
MOV JAZ, 0
MOV DX, 0
; SOLO A
CALL CLEAR_SCREEN
GOTOXY 1, 1
PRINTN 'A'
MOV CL, TAM_MATRIZ_A[1]


LIM1A:
GOTOXY 2, EJEY
PRINTN '|'
DEC CL
INC EJEY
CMP CL, 0
JA LIM1A


MOV EJEY, 1
MOV CL, TAM_MATRIZ_A[0]
DEC CL
MOV BL, TAM_MATRIZ_A[1]
MOV ESI, CL
DEC ESI


; EXEPCION ESPECIAL CL = 0
CMP CL, 0
JE CEROA



REPITE:
ESPACA:
GOTOXY ESPA, EJEY
PRINTN '-'
ADD ESPA, 4
DEC CL
CMP CL, 0
JA ESPACA
MOV EDI, ESPA

MOV ESPA, 6
INC EJEY
MOV CL, TAM_MATRIZ_A[0]
DEC CL
DEC BL
CMP BL, 0
JA REPITE



MOV ESPA, EDI
CEROA :
MOV EJEY, 1
MOV CL, TAM_MATRIZ_A[1]

LIM2A :
    GOTOXY ESPA, EJEY
    PRINTN '|'
    INC EJEY
    DEC CL
    CMP CL, 0
    JA LIM2A


    MOV ESI, 0
    MOV EDX, 0
    MOV EAX, 0
    MOV EBX, 0
    MOV EDI, 0
    MOV EDX, 0

    ; SOLO B
    MOV EJEY, 1
    ADD ESPA, 3
    GOTOXY ESPA, 1
    PRINTN 'B'
    MOV CL, TAM_MATRIZ_B[1]
    ADD ESPA, 1
    MOV DL, ESPA
    MOV JAZ, DL

    LIM1B :
GOTOXY ESPA, EJEY
PRINTN '|'
DEC CL
INC EJEY
CMP CL, 0
JA LIM1B

MOV EJEY, 1
MOV ESPA, DL
ADD ESPA, 4
MOV DL, ESPA
MOV CL, TAM_MATRIZ_B[0]
DEC CL
MOV BL, TAM_MATRIZ_B[1]
MOV DI, CL
DEC DI


; EXEPCION ESPECIAL CL = 0
CMP CL, 0
JE CEROB


REPITEB :
ESPACB:
GOTOXY ESPA, EJEY
PRINTN '-'
ADD ESPA, 4
DEC CL
CMP CL, 0
JA ESPACB
MOV ESI, ESPA

MOV ESPA, DL
INC EJEY
MOV CL, TAM_MATRIZ_B[0]
DEC CL
DEC BL
CMP BL, 0
JA REPITEB




MOV ESPA, ESI
CEROB :
MOV EJEY, 1
MOV CL, TAM_MATRIZ_B[1]

LIM2B :
    GOTOXY ESPA, EJEY
    PRINTN '|'
    INC EJEY
    DEC CL
    CMP CL, 0
    JA LIM2B



    MOV ESPA, 6

    ; SOLO C
    GOTOXY 1, YC
    PRINTN 'C'
    MOV CL, TAM_MATRIZ_A[1]


    LIM1C:
GOTOXY 2, YC
PRINTN '|'
DEC CL
INC YC
CMP CL, 0
JA LIM1C


MOV YC, 8
MOV CL, TAM_MATRIZ_B[0]
DEC CL
MOV BL, TAM_MATRIZ_A[1]
MOV ESI, CL
DEC ESI


; EXEPCION ESPECIAL CL = 0
CMP CL, 0
JE CEROC



REPITEC:
ESPACC:
GOTOXY ESPA, YC
PRINTN '-'
ADD ESPA, 4
DEC CL
CMP CL, 0
JA ESPACC
MOV EDI, ESPA

MOV ESPA, 6
INC YC
MOV CL, TAM_MATRIZ_B[0]
DEC CL
DEC BL
CMP BL, 0
JA REPITEC



MOV ESPA, EDI
CEROC :
MOV YC, 8
MOV CL, TAM_MATRIZ_A[1]

LIM2C :
    GOTOXY ESPA, YC
    PRINTN '|'
    INC YC
    DEC CL
    CMP CL, 0
    JA LIM2C





    MOV ESI, 0
    MOV EAX, 0

    MOV BL, TAM_MATRIZ_A[0]

    MOV CL, TAM_MATRIZ_A[1]
    ; A
    MOV TempPrint1, 0
    MOV TempPrint2, 0

    COLUMNAS:
FILAS:

GOTOXY X, Y;///ACOMODAR

MOV AL, MATRIZ_A[ESI]
CALL PRINT_NUM

ADD X, 4

INC ESI
INC TempPrint1

CMP BL, TempPrint1
JNE COLUMNAS; imprime las columnas

ADD Y, 1;////ACOMODAR           
INC TempPrint2
MOV TempPrint1, 0
MOV X, 3;////ACOMODAR           

CMP CL, TempPrint2
JNE FILAS; imprime las filas



MOV ESI, 0
MOV EDX, 0
MOV EDI, 0
MOV EAX, 0

MOV EDI, JAZ
INC EDI
MOV X, EDI
MOV Y, 1

MOV BL, TAM_MATRIZ_B[0]

MOV CL, TAM_MATRIZ_B[1]
; A
MOV TempPrint1, 0
MOV TempPrint2, 0

COLUMNASB:
FILASB:

GOTOXY X, Y;///ACOMODAR

MOV AL, MATRIZ_B[ESI]
CALL PRINT_NUM

ADD X, 4

INC ESI
INC TempPrint1

CMP BL, TempPrint1
JNE COLUMNASB; imprime las columnas

ADD Y, 1;////ACOMODAR
MOV DL, Y
INC TempPrint2
MOV TempPrint1, 0
MOV X, DI;////ACOMODAR
MOV Y, DL


CMP CL, TempPrint2
JNE FILASB; imprime las filas



MOV ESI, 0
MOV EDX, 0
MOV EDI, 0
MOV EAX, 0
MOV X, 3
MOV YC, 8
MOV BL, TAM_MATRIZ_B[0]
MOV CL, TAM_MATRIZ_A[1]

; A
MOV TempPrint1, 0
MOV TempPrint2, 0

COLUMNASC:
FILASC:

GOTOXY X, YC;///ACOMODAR

MOV AL, MAT_RESULT[ESI]
CALL PRINT_NUM

ADD X, 4

INC ESI
INC TempPrint1

CMP BL, TempPrint1
JNE COLUMNASC; imprime las columnas

ADD YC, 1;////ACOMODAR           
INC TempPrint2
MOV TempPrint1, 0
MOV X, 3;////ACOMODAR           

CMP CL, TempPrint2
JNE FILASC; imprime las filas

MOV CL, 0


GOTOXY 1, 14
CALL PTHIS
DB '1)BURBUJA o 2)SALIR:', 0
CALL SCAN_NUM
CMP CL, 2
JE  SALIDA


call clear_screen


ELEGIR :
MOV YC, 0
mov cx, 0
MOV AL, TAM_MATRIZ_B[0]
MOV BL, TAM_MATRIZ_A[1]
MUL BL
MOV LK, AL
dec LK
gotoxy 1, 1
call pthis
db 'Presiona (1) para Menor a Mayor o (2) para Mayor a menor o (3) Salir: ', 0

call scan_num
mov YC, cx
cmp YC, 1
je  ETIC_MEN
cmp YC, 2
JE ETIC_MEY
CMP YC, 3
JE  SALIDA1


ETIC_MEN :
call kk

ETIC_MEY :
call kk2

s :
mov EDI, 0
mov EAX, 0
MOV EJEY, 2
MOV JAZ, 1
call clear_screen
GOTOXY 1, EJEY
PRINTN 'MENOR A MAYOR ES: '
add EJEY, 5




imprc:
mov al, MAT_RESULT[EDI]
CALL GOTOXY JAZ, 3
CALL PRINT_NUM_UNS
add JAZ, 4
inc EDI
cmp EDI, LK
jbe imprc
JMP ELEGIR



s2:
mov EDI, 0
mov EAX, 0
MOV EJEY, 2
MOV JAZ, 1

GOTOXY 1, 5
PRINTN 'MAYOR A MENOR ES: '
add EJEY, 5

jmp imprc2



imprc2:
mov al, MAT_RESULT[edi]
GOTOXY JAZ, 6
CALL PRINT_NUM_UNS
add JAZ, 4
inc edi
cmp edi, LK
jbe imprc2
JMP ELEGIR


MOV DL,1
MOV DH,6
CALL GOTOXY
CALL PTHIS
DB '1)REINTENTAR o 2)SALIR:', 0
CALL SCAN_NUM
CMP CL, 1
JE REINTENTAR

SALIR:
; ***************************************************************************************
exit; SALE AL SISTEMA OPERATIVO
main ENDP
; (AQUÍ SE INSERTAN LOS PROCEDIMIENTOS ADICIONALES)
END main